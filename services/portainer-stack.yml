---
services:
  shepherd:
    build: .
    image: containrrr/shepherd
    environment: [SLEEP_TIME=48h, TZ=Europe/Copenhagen]
    volumes: [/var/run/docker.sock:/var/run/docker.sock]
    deploy:
      placement:
        constraints: [node.role == manager]
  portainer:
    image: portainer/portainer-ce:latest
    volumes: [portainer_data:/data]
    networks: [traefik_public, portainer_agent]
    # ports: [9000:9000]
    deploy:
      replicas: 0  # Start with 0 replicas to allow Sablier to manage scaling
      mode: replicated
      placement:
        constraints: [node.role == manager]
      labels:
        - traefik.docker.lbswarm=true
        - sablier.enable=true
        - sablier.group=portainer
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 1
        order: stop-first
        failure_action: pause
        delay: 10s
  agent:
    image: portainer/agent:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks: [portainer_agent]
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 1
        order: stop-first
        failure_action: pause
        delay: 10s
volumes:
  portainer_data:
networks:
  traefik_public:
    external: true
  portainer_agent:
    driver: overlay
    attachable: true
